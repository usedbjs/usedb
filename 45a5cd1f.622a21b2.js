(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{109:function(e,t,r){"use strict";r.d(t,"a",(function(){return b})),r.d(t,"b",(function(){return f}));var n=r(0),a=r.n(n);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function c(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=a.a.createContext({}),u=function(e){var t=a.a.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):c(c({},t),e)),r},b=function(e){var t=u(e.components);return a.a.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},d=a.a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,i=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),b=u(r),d=n,f=b["".concat(i,".").concat(d)]||b[d]||p[d]||o;return r?a.a.createElement(f,c(c({ref:t},l),{},{components:r})):a.a.createElement(f,c({ref:t},l))}));function f(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,i=new Array(o);i[0]=d;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:n,i[1]=c;for(var l=2;l<o;l++)i[l]=r[l];return a.a.createElement.apply(null,i)}return a.a.createElement.apply(null,r)}d.displayName="MDXCreateElement"},115:function(e,t,r){"use strict";r.d(t,"b",(function(){return o})),r.d(t,"a",(function(){return i}));var n=r(22),a=r(117);function o(){const{siteConfig:{baseUrl:e="/",url:t}={}}=Object(n.default)();return{withBaseUrl:(r,n)=>function(e,t,r,{forcePrependBaseUrl:n=!1,absolute:o=!1}={}){if(!r)return r;if(r.startsWith("#"))return r;if(Object(a.b)(r))return r;if(n)return t+r;const i=r.startsWith(t)?r:t+r.replace(/^\//,"");return o?e+i:i}(t,e,r,n)}}function i(e,t={}){const{withBaseUrl:r}=o();return r(e,t)}},117:function(e,t,r){"use strict";function n(e){return!0===/^(\w*:|\/\/)/.test(e)}function a(e){return void 0!==e&&!n(e)}r.d(t,"b",(function(){return n})),r.d(t,"a",(function(){return a}))},82:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return c})),r.d(t,"metadata",(function(){return s})),r.d(t,"toc",(function(){return l})),r.d(t,"default",(function(){return b}));var n=r(3),a=r(7),o=(r(0),r(109)),i=r(115),c={id:"concepts",title:"What is useDB?",sidebar_label:"What is useDB?",slug:"/"},s={unversionedId:"concepts",id:"concepts",isDocsHomePage:!1,title:"What is useDB?",description:"useDB is an open source library to make backend agnostic API calls using ORM like querying interface.",source:"@site/docs/concepts.md",slug:"/",permalink:"/usedb/docs/",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/concepts.md",version:"current",sidebar_label:"What is useDB?",sidebar:"someSidebar",previous:{title:"Motivation",permalink:"/usedb/docs/motivation"},next:{title:"Model",permalink:"/usedb/docs/model"}},l=[{value:"Flow Diagram",id:"flow-diagram",children:[]}],u={toc:l};function b(e){var t=e.components,r=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(n.a)({},u,r,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"useDB is an open source library to make backend agnostic API calls using ORM like querying interface."),Object(o.b)("p",null,"It also comes with a normalized cache that is powered by ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"https://mobx-state-tree.js.org/"}),"MST"),"."),Object(o.b)("p",null,"useDB consists of 3 layers,"),Object(o.b)("ol",null,Object(o.b)("li",{parentName:"ol"},Object(o.b)("strong",{parentName:"li"},"Binding"))),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"Client-side interface to fetch data from backend and put into the cache layer.")),Object(o.b)("ol",{start:2},Object(o.b)("li",{parentName:"ol"},Object(o.b)("strong",{parentName:"li"},"Cache"))),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"This is where the data returned from the Binding is stored in a normalized form. The cache is reactive and modeled using MST.")),Object(o.b)("ol",{start:3},Object(o.b)("li",{parentName:"ol"},Object(o.b)("strong",{parentName:"li"},"Backend"))),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"This layer is responsible for generating and passing the response to the frontend Binding layer."),Object(o.b)("li",{parentName:"ul"},"This could be your server or even localStorage/IndexDB.")),Object(o.b)("h3",{id:"flow-diagram"},"Flow Diagram"),Object(o.b)("img",{alt:"Flow diagram",src:Object(i.a)("img/activityDiagram.jpg")}))}b.isMDXComponent=!0}}]);