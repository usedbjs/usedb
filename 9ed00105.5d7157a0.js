(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{112:function(e,n,t){"use strict";t.d(n,"a",(function(){return u})),t.d(n,"b",(function(){return m}));var r=t(0),o=t.n(r);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function c(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?c(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):c(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var d=o.a.createContext({}),b=function(e){var n=o.a.useContext(d),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},u=function(e){var n=b(e.components);return o.a.createElement(d.Provider,{value:n},e.children)},s={inlineCode:"code",wrapper:function(e){var n=e.children;return o.a.createElement(o.a.Fragment,{},n)}},p=o.a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,c=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),u=b(t),p=r,m=u["".concat(c,".").concat(p)]||u[p]||s[p]||i;return t?o.a.createElement(m,a(a({ref:n},d),{},{components:t})):o.a.createElement(m,a({ref:n},d))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,c=new Array(i);c[0]=p;var a={};for(var l in n)hasOwnProperty.call(n,l)&&(a[l]=n[l]);a.originalType=e,a.mdxType="string"==typeof e?e:r,c[1]=a;for(var d=2;d<i;d++)c[d]=t[d];return o.a.createElement.apply(null,c)}return o.a.createElement.apply(null,t)}p.displayName="MDXCreateElement"},91:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return c})),t.d(n,"metadata",(function(){return a})),t.d(n,"toc",(function(){return l})),t.d(n,"default",(function(){return b}));var r=t(3),o=t(7),i=(t(0),t(112)),c={id:"configuration",title:"Configuration",sidebar_label:"Configuration",slug:"/configuration"},a={unversionedId:"configuration",id:"configuration",isDocsHomePage:!1,title:"Configuration",description:"Models",source:"@site/docs/configuration.md",slug:"/configuration",permalink:"/usedb/docs/configuration",version:"current",sidebar_label:"Configuration"},l=[{value:"Models",id:"models",children:[{value:"Defining Models",id:"defining-models",children:[]}]},{value:"Binding",id:"binding",children:[]},{value:"Cache DB",id:"cache-db",children:[]},{value:"Connection",id:"connection",children:[]},{value:"Querying",id:"querying",children:[{value:"Create",id:"create",children:[]},{value:"Read",id:"read",children:[]},{value:"Update",id:"update",children:[]},{value:"Delete",id:"delete",children:[]}]}],d={toc:l};function b(e){var n=e.components,t=Object(o.a)(e,["components"]);return Object(i.b)("wrapper",Object(r.a)({},d,t,{components:n,mdxType:"MDXLayout"}),Object(i.b)("h2",{id:"models"},"Models"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Models are the core entities of the application."),Object(i.b)("li",{parentName:"ul"},"For example, for a Blog application, this can be User, Post and Comment.")),Object(i.b)("h3",{id:"defining-models"},"Defining Models"),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{}),'import { types } from "@usedb/core";\n\nconst User = types.model({\n    id: types.identifierNumber,\n    name: types.string\n});\n\nconst Post = types.model({\n    id: types.identifierNumber,\n    text: types.string,\n    author: types.reference(User)\n});\n\n')),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"For complete type references ",Object(i.b)("a",Object(r.a)({parentName:"li"},{href:"https://mobx-state-tree.js.org/overview/types"}),"refer."))),Object(i.b)("h2",{id:"binding"},"Binding"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Binding is an interface responsible for performing the query and returning the result.\nIt should implement the Binding interface.")),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{}),"export interface Binding {\n    perform: (query: QueryData) => Promise<any>;\n    getAllCollections: () => Promise<any>;\n}\n")),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Examples to implement your custom binding can be found ",Object(i.b)("a",Object(r.a)({parentName:"li"},{href:"https://github.com/use-db/core/tree/master/src/binding"}),"here"))),Object(i.b)("h2",{id:"cache-db"},"Cache DB"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"This is the cache layer used by useDB to store data in a normalized form."),Object(i.b)("li",{parentName:"ul"},"It is created using the above defined models.")),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{}),'import { createModel } from "@usedb/core";\nimport { Post, User } from "./models";\n\nconst models = {\n    Post,\n    User\n}\n\nconst DBModel = createModel({\n  models\n});\n\nexport const db = DBModel.create();\n\n')),Object(i.b)("h2",{id:"connection"},"Connection"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Connection is a class used by useDB to query the provided Binding."),Object(i.b)("li",{parentName:"ul"},"It should be instantiated with a binding and an instance of the db.")),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{}),'import { Provider } from \'@usedb/react\';\nimport { db } from "./db";\nimport { MyAppBinding } from "./binding";\n\nconst connection = new Connection({ bind: new MyAppBinding(), db });\n\nconst App = () => {\n  return (\n    <Provider connection={connection}>\n      \x3c!-- Your components --\x3e\n    </Provider>\n  );\n};\n\n\n')),Object(i.b)("h2",{id:"querying"},"Querying"),Object(i.b)("h3",{id:"create"},"Create"),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{}),'const result = useDB(db.Post.create({ data: { text: "Hello world" }}))\n')),Object(i.b)("h3",{id:"read"},"Read"),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{}),"const result = useDB(db.Post.findOne({ where: { id: 1 }}))\n")),Object(i.b)("h3",{id:"update"},"Update"),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{}),'const result = useDB(db.Post.update({ where: { id: 1 }, data: { text: "Hello new world" } }))\n')),Object(i.b)("h3",{id:"delete"},"Delete"),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{}),"const result = useDB(db.Post.delete({ where: { id: 1 }}))\n")))}b.isMDXComponent=!0}}]);